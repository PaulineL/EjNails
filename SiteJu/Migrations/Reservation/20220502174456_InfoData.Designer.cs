// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiteJu.Data;

#nullable disable

namespace SiteJu.Migrations.Reservation
{
    [DbContext(typeof(ReservationContext))]
    [Migration("20220502174456_InfoData")]
    partial class InfoData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("PrestationOptionRDV", b =>
                {
                    b.Property<int>("OptionsID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RDVSId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OptionsID", "RDVSId");

                    b.HasIndex("RDVSId");

                    b.ToTable("RDVPrestationsOptions", (string)null);
                });

            modelBuilder.Entity("PrestationPrestationOption", b =>
                {
                    b.Property<int>("CompatibleWithID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OptionsAvailableID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CompatibleWithID", "OptionsAvailableID");

                    b.HasIndex("OptionsAvailableID");

                    b.ToTable("PrestationOptionLink", (string)null);
                });

            modelBuilder.Entity("PrestationRDV", b =>
                {
                    b.Property<int>("PrestationsID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RDVSId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PrestationsID", "RDVSId");

                    b.HasIndex("RDVSId");

                    b.ToTable("RDVPrestations", (string)null);
                });

            modelBuilder.Entity("SiteJu.Data.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Firstname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Information")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("SiteJu.Data.Prestation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Prestations", (string)null);
                });

            modelBuilder.Entity("SiteJu.Data.PrestationCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PrestationsCategorys", (string)null);
                });

            modelBuilder.Entity("SiteJu.Data.PrestationOption", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdditionalPrice")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("AdditionalTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MaxAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Quantifiable")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("PrestationsOptions", (string)null);
                });

            modelBuilder.Entity("SiteJu.Data.RDV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("At")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("RDVS");
                });

            modelBuilder.Entity("PrestationOptionRDV", b =>
                {
                    b.HasOne("SiteJu.Data.PrestationOption", null)
                        .WithMany()
                        .HasForeignKey("OptionsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteJu.Data.RDV", null)
                        .WithMany()
                        .HasForeignKey("RDVSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrestationPrestationOption", b =>
                {
                    b.HasOne("SiteJu.Data.Prestation", null)
                        .WithMany()
                        .HasForeignKey("CompatibleWithID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteJu.Data.PrestationOption", null)
                        .WithMany()
                        .HasForeignKey("OptionsAvailableID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrestationRDV", b =>
                {
                    b.HasOne("SiteJu.Data.Prestation", null)
                        .WithMany()
                        .HasForeignKey("PrestationsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteJu.Data.RDV", null)
                        .WithMany()
                        .HasForeignKey("RDVSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiteJu.Data.Prestation", b =>
                {
                    b.HasOne("SiteJu.Data.PrestationCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SiteJu.Data.RDV", b =>
                {
                    b.HasOne("SiteJu.Data.Client", "Client")
                        .WithMany("RDV")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("SiteJu.Data.Client", b =>
                {
                    b.Navigation("RDV");
                });
#pragma warning restore 612, 618
        }
    }
}
