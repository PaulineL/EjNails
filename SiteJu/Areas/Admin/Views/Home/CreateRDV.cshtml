@{
    ViewData["Title"] = "Créer un rdv";
}
@model RDVViewModel

<link href="~/css/admin.css" rel="stylesheet">

<div class="container">
    <h1>Créer un rendez-vous</h1>
    <div class="row">
        <div class="col-8">
            @using (Html.BeginForm("CreateRDV", "Home", FormMethod.Post))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.At, new { @class = "form-label" })
                    @Html.EditorFor(x => x.At)
                </div>
                <div class="form-group">
                    <div>
                        <label><input type="radio" name="box" value="existing-client">Rechercher un client</label>
                        <label><input type="radio" name="box" value="create-client">Nouveau client</label>
                    </div>

                    <div class="existing-client box">
                        <input type="text" class="form-control" id="search-client" placeholder="Taper un nom" />

                        <select id="search-client-result" name="ClientId" class="form-select" multiple aria-label="multiple select example">
                        </select>
                    </div>
                    <div class="create-client box">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Client.Firstname, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Client.Firstname, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Client.Lastname, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Client.Lastname, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Client.Telephone, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Client.Telephone, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Client.Email, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Client.Email, new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <h2>Prestations</h2>
                    @for (int i = 0; i < Model.Prestation.Count; i++)
                    {
                        <div class="form-check">
                            @Html.HiddenFor(model => model.Prestation[i].Id)
                            @Html.CheckBoxFor(model => model.Prestation[i].IsSelected, new { @class = "form-check-input" })
                            @Html.DisplayFor(model => model.Prestation[i].Name, new { @class = "form-check-label" })
                        </div>
                    }
                </div>
                <button type="submit" class="btn btn-primary">Envoyer</button>
            }
        </div>
        <div class="col-4">
            <div id='calendar' style="height:100%"></div>
            <script>let calendar = null
                document.getElementById("meeting-time").onchange = ev => {
                    calendar.changeView('timeGridDay', ev.target.valueAsDate);
                };
                document.addEventListener('DOMContentLoaded', () => {
                    var calendarEl = document.getElementById('calendar');
                    var startDay = new Date();
                    startDay.setHours(0, 0, 0);
                    var endDay = new Date()
                    endDay.setHours(23, 0, 0);

                    calendar = new FullCalendar.Calendar(calendarEl, {
                        initialView: 'timeGrid',
                        height: "100%",
                        locale: 'fr',
                        allDaySlot: false,
                        slotMinTime: '08:00:00',
                        slotMaxTime: '20:00:00',
                        visibleRange: {
                            start: startDay,
                            end: endDay
                        },
                        weekends: true,
                        aspectRatio: 1.5,
                        eventSources: [{
                            url: '/admin/rdv'
                        }],
                        headerToolbar: {
                            start: '',
                            center: 'title',
                            end: ''
                        }
                    });
                    calendar.render();
                });</script>
        </div>
    </div>
</div>

<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>

<script>$(function () {

        $(document).ready(function () {
            $('input[type="radio"]').click(function () {
                var inputValue = $(this).attr("value");
                var targetBox = $("." + inputValue);
                $(".box").not(targetBox).hide();
                $(targetBox).show();
            });
        });

        const clientSearchInput = document.getElementById('search-client');

        clientSearchInput.addEventListener('keyup', searchClient);

        function searchClient(e) {
            let searchValue = clientSearchInput.value;

            fetch("SearchClient?lastname=" + searchValue).then(async response => {

                // vide la liste
                document.getElementById("search-client-result").innerText = "";
                let clients = await response.json()

                clients.forEach(client => {
                    let option = document.createElement("option");
                    option.value = client.id
                    option.innerText = client.firstname + " " + client.lastname
                    document.getElementById("search-client-result").appendChild(option);
                });

            })
        }

    })</script>